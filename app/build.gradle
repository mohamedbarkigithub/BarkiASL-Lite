plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}
android {
    namespace = 'com.mohamed.barki.asl.lite'
    compileSdk = 35
    defaultConfig {
        applicationId "com.mohamed.barki.asl.lite"
        minSdk = 23
        targetSdk = 35
        versionCode 25012500
        versionName "2025.01.25"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources = false
            debuggable true
            signingConfig = signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/services/javax.annotation.processing.Processor', 'lib/armeabi/**']
        }
        jniLibs {
            keepDebugSymbols += ['*/armeabi/*.so', '*/armeabi-v7a/*.so', '*/x86/*.so']
            excludes += ['lib/armeabi/**']
            pickFirsts += ['lib/*/*.so']
        }
    }
    lint {
        abortOnError = false
        checkReleaseBuilds = false
        disable 'InvalidPackage'
        disable 'ContentDescription'
    }
    allprojects {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.compilerArgs << "-Xlint:deprecation"
            }
        }
        plugins.with {
            tasks.withType(JavaPlugin).tap {
                configureEach {
                    configurations.configureEach { conf ->
                        if (conf.canBeResolved && !(conf.name in excludedConfigurations)) {
                            add(conf.name, enforcedPlatform(project(":project-dependencies")))
                        }
                    }
                }
            }
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform('com.google.firebase:firebase-bom:33.8.0')
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.firebase:firebase-database:21.0.0'
    implementation 'com.google.zxing:core:3.5.1'
    implementation 'com.firebaseui:firebase-ui-database:8.0.2'
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.15.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.appcompat:appcompat-resources:1.7.0'
    implementation 'androidx.mediarouter:mediarouter:1.7.0'
    implementation 'androidx.navigation:navigation-ui:2.8.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}